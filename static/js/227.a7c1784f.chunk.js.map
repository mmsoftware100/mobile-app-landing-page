{"version":3,"file":"static/js/227.a7c1784f.chunk.js","mappings":"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","sources":["template/sections/category/v2/listing/category-list.jsx","template/pages/category/category-list.jsx","../node_modules/@mui/icons-material/esm/MobileScreenShare.js","template/sections/functions/functions.js","template/sections/shops/noshop/no-shop-component.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["import { Delete, Edit, MobileScreenShare, QrCode, Restaurant } from '@mui/icons-material';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  Paper,\r\n  Stack,\r\n  Tooltip,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { deleteCategoryAsyncThunk } from 'features/category/categorySlice';\r\nimport {\r\n  selectCategoryDeleteStatus,\r\n  selectCategoryError,\r\n  selectSelectedCategory,\r\n  selectShopList,\r\n  setSelectedCategory,\r\n  setCategoryDeleteStatus,\r\n  setSelectedShop,\r\n} from 'features/main/mainSlice';\r\nimport { selectAccessToken } from 'features/user/userSlice';\r\nimport QRCode from 'qrcode.react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Iconify from 'template/components/iconify';\r\nimport { useRouter } from 'template/routes/hooks';\r\nimport { PreviewIcon, goToPreview } from 'template/sections/functions/functions';\r\nimport NoShopComponent from 'template/sections/shops/noshop/no-shop-component';\r\n\r\nexport default function CategoryList() {\r\n  const router = useRouter();\r\n  const dispatch = useDispatch();\r\n\r\n  // shop တစ်ခုလုံး လိုတယ်။\r\n  const shopList = useSelector(selectShopList);\r\n  const selectedCategory = useSelector(selectSelectedCategory);\r\n  // category နဲ့ ပက်သက်ရင် delete status လိုမယ်။\r\n  const categoryDeleteStatus = useSelector(selectCategoryDeleteStatus);\r\n  const categoryError = useSelector(selectCategoryError);\r\n  // လုပ်ချင်တာ လုပ်ဖို့ access token\r\n  const accessToken = useSelector(selectAccessToken);\r\n\r\n  // ---------- internal state ------------ //\r\n  // for delete confirmation dialog\r\n  const [deleteConfirmationDialog, setDeleteConfirmationDialog] = useState(false);\r\n\r\n  const categoryEditOnClick = (category) => {\r\n    console.log('categoryEditOnClick');\r\n    console.log(category);\r\n    // navigate to category edit page\r\n    dispatch(setSelectedCategory(category));\r\n\r\n    //dispatch(setSelectedMenu(menu));\r\n    router.push(`/categories/${category.id}/edit`);\r\n  };\r\n\r\n  const categoryDeleteOnClick = (category) => {\r\n    // delete category\r\n    // show confirmation dialog\r\n    // let formData = new FormData();\r\n    // formData.append('access_token', access_token);\r\n    // formData.append('id', category.id);\r\n    // dispatch(deleteCategoryAsyncThunk(formData));\r\n    dispatch(setSelectedCategory(category));\r\n    setDeleteConfirmationDialog(true);\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    // close dialog\r\n    setDeleteConfirmationDialog(false);\r\n  };\r\n  const confirmDelete = (id, access_token) => {\r\n    // close dialog\r\n    setDeleteConfirmationDialog(false);\r\n    let formData = new FormData();\r\n    formData.append('access_token', access_token);\r\n    formData.append('id', id);\r\n    dispatch(deleteCategoryAsyncThunk(formData));\r\n  };\r\n\r\n  const newCategoryClicked = (shop) => {\r\n    console.log('newCategoryClicked');\r\n    console.log(shop.name);\r\n    console.log(shop.id);\r\n    dispatch(setSelectedShop(shop.id));\r\n    console.log('dispatch');\r\n    // go to category new page\r\n\r\n    // router.push(`/categories/${1}/edit`);\r\n    router.push('/categories/create');\r\n    console.log('router');\r\n  };\r\n\r\n  const handleErrorDialogClose = () => {\r\n    // set error status to idle\r\n    dispatch(setCategoryDeleteStatus('idle'));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"lg\">\r\n        {shopList.length === 0 ? <NoShopComponent /> : <Container></Container>}\r\n        {shopList.map((shop) => (\r\n          <Box key={shop.id} mb={4}>\r\n            {/* shop heading list */}\r\n            <Grid container>\r\n              <Grid item lg={2} xs={3} textAlign={'center'}>\r\n                <img\r\n                  alt={'shop info'}\r\n                  src={shop.shop_image_url ?? 'https://via.placeholder.com/350x350'}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={8} xs={6} textAlign={'center'}>\r\n                <Typography variant=\"h2\">{shop.name}</Typography>\r\n                <Typography p={2}>{shop.description}</Typography>\r\n                <Typography>{shop.address}</Typography>\r\n              </Grid>\r\n              <Grid item lg={2} xs={3} textAlign={'center'}>\r\n                <QRCode value={`https://qrmenu.mmsoftware100.com/${shop.url}`} size={100} />\r\n                {/* <img alt={'qr code'} src={'https://via.placeholder.com/350x350'} /> */}\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* categories header */}\r\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5} mt={5}>\r\n              <Typography variant=\"h4\">Menus</Typography>\r\n\r\n              <Stack direction=\"row\">\r\n                <PreviewIcon url={shop.url} />\r\n                {/* <PreviewIcon url={`${shop.url}`}/> */}\r\n                {/* <Tooltip title=\"Preview shop\">\r\n                  <Button onClick={() => goToPreview(`${shop.url}`)}>\r\n                    <MobileScreenShare />\r\n                  </Button>\r\n                </Tooltip> */}\r\n\r\n                <Button\r\n                  onClick={() => newCategoryClicked(shop)}\r\n                  // component={Link}\r\n                  // to={`/categories/create?shop_id=${shop.id}`}\r\n                  variant=\"contained\"\r\n                  color=\"inherit\"\r\n                  startIcon={<Iconify icon=\"eva:plus-fill\" />}\r\n                >\r\n                  New Menu\r\n                </Button>\r\n              </Stack>\r\n            </Stack>\r\n\r\n            {/* categories list */}\r\n            <Grid container spacing={2} mt={4}>\r\n              {shop.categories.map((category) => (\r\n                <Grid xs={'6'} lg={3} item>\r\n                  <Grid\r\n                    container\r\n                    direction={'column'}\r\n                    sx={{ border: '1px solid grey', borderRadius: '4px' }}\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      textAlign={'center'}\r\n                      p={2}\r\n                      sx={{ backgroundColor: 'grey', color: 'white' }}\r\n                    >\r\n                      {category.name}\r\n                    </Grid>\r\n                    <Grid container>\r\n                      <Grid item xs={6} textAlign={'center'}>\r\n                        {' '}\r\n                        <Button onClick={() => categoryEditOnClick(category)}>\r\n                          <Edit />\r\n                        </Button>\r\n                      </Grid>\r\n                      <Grid item xs={6} textAlign={'center'}>\r\n                        {' '}\r\n                        <Button onClick={() => categoryDeleteOnClick(category)}>\r\n                          <Delete />\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n\r\n            <br></br>\r\n            <Divider />\r\n          </Box>\r\n        ))}\r\n      </Container>\r\n\r\n      {/* delete confirmation dialog */}\r\n      <Dialog\r\n        open={deleteConfirmationDialog}\r\n        // onClose={() => handleClose(id)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Delete Confirmation!</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure to delete {selectedCategory.name} ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => cancelDelete(0)} autoFocus>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => confirmDelete(selectedCategory.id, accessToken)} autoFocus>\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* delete error dialog */}\r\n      <Dialog\r\n        open={categoryDeleteStatus === 'error'}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Error!</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">{categoryError}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleErrorDialogClose} autoFocus>\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n\r\nimport { CategoryListSection } from 'template/sections/category/v2/listing';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CategoryList() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Category | List </title>\r\n      </Helmet>\r\n\r\n      <CategoryListSection />\r\n    </>\r\n  );\r\n}\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 1.01 7 1c-1.1 0-1.99.9-1.99 2v18c0 1.1.89 2 1.99 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 19H7V5h10v14zm-4.2-5.78v1.75l3.2-2.99L12.8 9v1.7c-3.11.43-4.35 2.56-4.8 4.7 1.11-1.5 2.58-2.18 4.8-2.18z\"\n}), 'MobileScreenShare');","import { MobileScreenShare } from '@mui/icons-material';\r\nimport { Button, Tooltip, Typography } from '@mui/material';\r\n\r\nexport function goToPreview(url) {\r\n  // window.open(`http://localhost:3001/${url}`, '_blank');\r\n  window.open(`https://qrmenu.mmsoftware100.com/${url}`, '_blank');\r\n}\r\n\r\nexport function PreviewIcon({ url }) {\r\n  return (\r\n    <>\r\n      {/* {url} */}\r\n      <Tooltip title=\"Preview shop\">\r\n        <Button\r\n          onClick={() => goToPreview(url)}\r\n          sx={{ marginRight: '8px' }}\r\n          variant=\"contained\"\r\n          color=\"inherit\"\r\n          startIcon={<MobileScreenShare />}\r\n        >\r\n          Preview Shop\r\n        </Button>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport function cellStyle()  {\r\n  return {backgroundColor:'rgb(0,0,0,0.1)', color:'black'};\r\n}\r\n","import { Box } from \"@mui/material\";\r\n\r\nexport default function NoShopComponent() {\r\n    \r\n  return (\r\n    <Box>\r\n        <h2>No shop is available, please insert your first shop</h2>\r\n    </Box>\r\n  );\r\n}\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');"],"names":["CategoryList","router","useRouter","dispatch","useDispatch","shopList","useSelector","selectShopList","selectedCategory","selectSelectedCategory","categoryDeleteStatus","selectCategoryDeleteStatus","categoryError","selectCategoryError","accessToken","selectAccessToken","_useState","useState","_useState2","_slicedToArray","deleteConfirmationDialog","setDeleteConfirmationDialog","_jsxs","_Fragment","children","Container","component","maxWidth","length","_jsx","NoShopComponent","map","shop","_shop$shop_image_url","Box","mb","Grid","container","item","lg","xs","textAlign","alt","src","shop_image_url","Typography","variant","name","p","description","address","QRCode","value","concat","url","size","Stack","direction","alignItems","justifyContent","mt","PreviewIcon","Button","onClick","console","log","id","setSelectedShop","push","newCategoryClicked","color","startIcon","Iconify","icon","spacing","categories","category","sx","border","borderRadius","backgroundColor","setSelectedCategory","categoryEditOnClick","Edit","categoryDeleteOnClick","Delete","Divider","Dialog","open","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","access_token","formData","FormData","append","deleteCategoryAsyncThunk","confirmDelete","setCategoryDeleteStatus","Helmet","CategoryListSection","createSvgIcon","d","_ref","Tooltip","title","window","goToPreview","marginRight","MobileScreenShare","cellStyle"],"sourceRoot":""}